<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[图片小记]]></title>
    <url>%2Fposts%2F21185e19%2F</url>
    <content type="text"><![CDATA[记录一些自己拍的觉得还可以的照片 2018年8月28日早上累了，总是对着电脑，觉得累了，便想着出去走走好了。绕了一圈 图书馆，然后在水木附近的一处，看到了白蝴蝶。便在那里逗留了一会儿。想近距离地拍一拍蝴蝶，看着那儿有一只，便悄悄走过去，刚接近那蝴蝶便飞走了。我又换了个想法，不如等吧，如果我没有恶意，那蝴蝶也总会落到附近地地方的。等了一会儿，一只便落在自己身旁一朵花上，像电影里地慢动作一样，我把手机推进到那蝴蝶面前，心里念着，可别惊动了。不知道是那蝴蝶胆子大还是我动作轻，他竟然在那里待了很久。或者说那蝴蝶也知道镜头感？他煽动翅膀的时候恰巧便拍了这。虽然说不上是多么奇妙的图片，但是在等待的时候，看到他在自己镜头下展翅的时候，心里还是激动不已的。一路回来，发现蝴蝶还是不少的，这么一想，觉得自己好像很久没有再仔仔细细看生活了。看着蝴蝶和花，想起了那句，留连戏蝶时时舞，自在娇莺恰恰啼。哈，还竟然真的有鸟叫声。]]></content>
      <categories>
        <category>杂谈</category>
        <category>小日子</category>
      </categories>
      <tags>
        <tag>摄影</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[信息处理：在信息时代认知心理学的语言及分析工具]]></title>
    <url>%2Fposts%2F6cabab92%2F</url>
    <content type="text"><![CDATA[这篇文章就是一个介绍型的文章，介绍了构成现在的心里学的一些基石。文献比较长，里面介绍的几位大牛，都是在阅读文献中会尝尝看到的，比如Pearson（Pearson相关呀，第一个反应）。作为了解或者科普还是个不错的选择吧。原文链接：https://www.frontiersin.org/articles/10.3389/fpsyg.2018.01270/full信息时代可以追溯到Norbert Wiener和Claude Shannon在二十世纪四十年代的的控制和信息理论的工作，随其后的一些发展对重塑20实际50年代后的心理学领域有着重要的影响。同时从Ronald Fisher， Jerzy Neyman 以及 Egon Pearson的工作中，实验设计及推断性统计检验方面取得了进展。这些跨学科的进步为所谓认知革命，或者更准确来说是信息处理革命提供了概念和方法工具。控制论奠定了这样的一个概念：从神经生理机制到社会活动，都能够建模为具有前馈和反馈回路的结构化控制系统。信息论则提供了量化熵和信息的方式，促进了信息流的理论化。分析理论提供了可以让科学家从控制实验中得到推论以及概念化人了决策的方法。通过这三个支柱，认知心理学适应了信息时代的发展。随着在信息时代技术的发展，人类网络环境交织密切，心理认知学的发展也成为交叉研究中重要的组成。在技术发展的前沿，断参与跨学科的研究，能让心理学家不仅能够改进理论，同时在新的科学纪元扮演着重要的角色。]]></content>
      <categories>
        <category>文献</category>
      </categories>
      <tags>
        <tag>历史，review</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[My3kWords]]></title>
    <url>%2Fposts%2Ff7edfc86%2F</url>
    <content type="text"><![CDATA[拖了好久的背单词小程序，但是还没完全弄好。。anyway，先写着吧。程序：Pan叨叨：Di 使用方式1python NewNew3K.py 目前实现的功能 基本的GUI 选择从哪里开始背单词 单词星标 学习星标单词 键盘监听 还需要完善的东西字体很小，键盘使用诡异，数据库没有完全实现。 gui的界面和字体等 逻辑链条 添加menu global shuffle]]></content>
      <categories>
        <category>项目</category>
        <category>背单词</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[一些自己感兴趣的数据库]]></title>
    <url>%2Fposts%2F14da436b%2F</url>
    <content type="text"><![CDATA[记录一些自己感兴趣的数据库 中华古诗词数据库http://shici.store/chinese-poetry/ AffectNet 数据库http://mohammadmahoor.com/affectnet/图片及情绪标注 HCI tagging 数据库https://mahnob-db.eu/hci-tagging/脑电，视频等]]></content>
      <categories>
        <category>资源</category>
        <category>数据库</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[我要背上吉他离开北方]]></title>
    <url>%2Fposts%2F867d7fcf%2F</url>
    <content type="text"><![CDATA[我要背上吉他离开北方——宋东野《斑马，斑马》说起来也确实奇怪，刚才走了几圈，听着张悬的歌，泪流满面，而现在，呆坐在电脑面前，却不知道该说些什么了。那时的心情无法完全完全复制吧。然而总是想写点什么。听着《MALAIMO》，觉得心情舒畅了很多，人生就是无意义的随性集合吧。朋友说叔本华的《附录与补遗》还不错，可以考虑看看吧。在微信阅读上搜了一下叔本华的书，人的意义，人生之类的。每个哲学家对这些总喜欢大书特书。让我想起，就算是我们也忍不住对人生发表一些高谈阔论。其实已经有些困倦了，可是总想写些什么，不为什么，只为了自己，只是想。就像是人生的标记一样。看着弟弟们长大的照片，便觉得心情很复杂。看着他们长大了，觉得很欣慰，还有点小帅也很欣慰，感觉成熟了不少也很欣慰，然而他们的老姐却还是如此，一言难尽。说起他们，心里总觉得亏欠，觉得自己没有做好一个姐姐，没有承担着姐姐的责任。说起能给他们的东西，好像身上也没什么可以给的了。小时候，弟弟们比我矮，还喜欢当跟屁虫，如今，真实一个比一个高，然后还不理我2333。想起他们，觉得幸福。看着家里人认真生活的样子，觉得开心。然而，我好像不知道怎么了吧。想着，看着他们努力生活的样子，自己该如此才是。有些话，不知道像何人诉说，也不知道从何说起。前几日，朋友说的话，仍在脑海里盘旋。我所伤心难过之事不能说，便招来这样的误会是必然的。自己没有这样的习惯。为人所表现的豁达与无畏，半真半假，真的是我确实是这么想的，假的是在自己身上显得苍白。每每入夜，便觉得自在而难过。前一阵子睡不着，这一两天倒是开始困倦不已了。最近总想起两个人，想起他们，心里便觉得一紧。想起了那只小时候做梦梦到的巨型蜘蛛，从天而降。感觉也也是有一只蜘蛛盘旋在上空。明明知道并不可怕，然而还是害怕，明明知道只是虚妄，然而还是会害怕。想起，《金刚经》里的：“诸心皆为非心，是名为心……过去心不可得，现在心不可得，未来心不可得”，也会想起《心经》里的“色即是空，空即是色，受想行识亦复如是”。这两天弹吉他，用手机录下来听，觉得自己唱歌不好听，吉他也要多练一些，希望能够有一天背着吉他可以在街头流浪。说起流浪，以前我说我最想做的事情便是流浪，朋友都觉得我很扯，说流浪很苦什么的。说起来，要是我胆子大一点，也许就说不定与现在截然不同的光景。]]></content>
      <categories>
        <category>杂谈</category>
        <category>小日子</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[SSD-tensorflow学习之制作数据集]]></title>
    <url>%2Fposts%2F572e9c52%2F</url>
    <content type="text"><![CDATA[记录一下自己构建数据的一个流程 参考的博客：https://blog.csdn.net/w5688414/article/details/78395177SSD的网络：https://github.com/balancap/SSD-Tensorflow 文件目录下载下来ssd的文件夹目录应该是差不多长这样子的:SSD-Tensorflow-master├─checkpoints├─datasets├─demo├─deployment├─mydata ###这部分文件夹是我自己创建的│ ├─white│ │ ├─Annotations│ │ ├─ImageSets│ │ │ └─Main│ │ └─JPEGImages│ └─white_tfrecord├─nets├─notebooks├─pictures├─preprocessing├─tf_extended 1. 准备数据12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364# 示例数据的位置 data_path = "./mydata/white/" tf_path = "./mydata/white_tfrecord/"``` 以下是我在网络上下载的VOC2007的数据的目录文件，├─VOC2007│ ├─Annotations│ ├─ImageSets│ │ ├─Layout│ │ ├─Main│ │ └─Segmentation│ ├─JPEGImages│ ├─SegmentationClass│ └─SegmentationObject这个示例中主要是要需要Annotation和JPEGimages的文件夹，所以呢就创建了如下的目录：把图片放在JPEGImages目录下，xml格式的文件放在Annotations目录下├─white│ ├─Annotations│ └─JPEGimages│ ├─ImageSets│ │ ├─Main利用程序生成 rain.txt, test.txt, trainval.txt, val.txt```pythonimport osimport random xmlfilepath="./mydata/white/Annotations"saveBasePath="./mydata" trainval_percent=0.8train_percent=0.7total_xml = os.listdir(xmlfilepath)num=len(total_xml) list=range(num) tv=int(num*trainval_percent) tr=int(tv*train_percent) trainval= random.sample(list,tv) train=random.sample(trainval,tr) print("train and val size",tv)print("traib size",tr)ftrainval = open(os.path.join(saveBasePath,'white/ImageSets/Main/trainval.txt'), 'w') ftest = open(os.path.join(saveBasePath,'white/ImageSets/Main/test.txt'), 'w') ftrain = open(os.path.join(saveBasePath,'white/ImageSets/Main/train.txt'), 'w') fval = open(os.path.join(saveBasePath,'white/ImageSets/Main/val.txt'), 'w') for i in list: name=total_xml[i][:-4]+'\n' if i in trainval: ftrainval.write(name) if i in train: ftrain.write(name) else: fval.write(name) else: ftest.write(name) ftrainval.close() ftrain.close() fval.close() ftest .close() 会生成如下的目录├─white│ ├─Annotations│ └─JPEGimages│ ├─ImageSets│ │ └─Main│ │ test.txt│ │ train.txt│ │ trainval.txt│ │ val.txt 数据准备就基本完成了 2. 生成tfrecord的文件数据集生成后，把数据集转换成tfrecord的形式修改 datasets/pascalvoc_common.py文件123456VOC_LABELS = &#123; 'none': (0, 'Background'), 'w,standing': (1, 'w_standing'), 'w,lying ': (2, 'w_lying'), 'w,other': (3, 'w_other'),&#125; 因为采用的是jpeg格式（如果还是jpg格式就不用改了，原代码的格式是jpg），所以在datasets/pascalvoc_to_tfrecords.py 把82行改以一下12filename = directory + DIRECTORY_IMAGES + name + '.jpeg'image_data = tf.gfile.FastGFile(filename, 'rb').read() 运行如果出现这个错误1UnicodeDecodeError: 'utf-8' codec can't decode byte 0x89 in position 0: invalid start byte 就把83行改成如下所示 1image_data = tf.gfile.FastGFile(filename, 'rb').read() 一些问题 关于LabelImage标注得到的xml得不到Height和weight 看了一下数据，标注jpg得到的xml是正确的，而标注jpeg却得不到height和weight，具体什么原因还没有找，等到之后再看看吧。因为没有得到size所以我在datasets/pascalvoc_to_tfrecords.py中手动指定了size（所有图片的大小都一样，所以这样应该也是没有问题的） 关于打标签 最开始的label打标签用了逗号，其实并不会报什么错，但是就是看起来有点蠢，也是因为自己没有特别理解这个打标签的内容。命名的角度来说，逗号是不太合适的，应该用下划线比较好。]]></content>
      <categories>
        <category>技术</category>
        <category>Tensorflow</category>
      </categories>
      <tags>
        <tag>SSD</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018年6月25日]]></title>
    <url>%2Fposts%2Fa53215a7%2F</url>
    <content type="text"><![CDATA[家里的几个小孩子高考结束了，不由得想起当时的自己。今天在想如何帮助小孩子们填报志愿，我觉得比填报更重要的是人生的规划，或者说是明白自己该如何的生活。如今的自己也没有想得很明白，究竟应该如何地活着。长期的教育以来，职业规划，人生规划非常的缺乏。所有人都按部就班的走着，走到了某个点，于是一下子便放手了。在父母那一代的日子里，多是为了生活而奋斗，多是为了温饱而努力。现在今非昔比了，我想人都是需要一点梦想或者追求的。人生的追求与思考从来不是说上了大学之后才开始的，而应该是人从小到大的不断探索。所谓未来是什么呢，是某个时间点，还是只是人为所定义的期望。说这些话简直不着逻辑。其实也不知道该说些什么，只是突然想写写东西而已。对于自己而言，今天算是迈出了重要的第一步，然而心里还是很慌张。即便如此，也不知道之后如何。今天的事实证明我太过焦虑了：在之前拼命地想着，如果别人不相信我怎么办。然而一想到有一些事情即将广而告之，便也觉得戚戚然。虽然也算不上什么大事，只是不由得难过了起来。忘了把东西放到哪里了。。。感觉很烦躁。。。邋邋遢遢的毛病该改改了。。。]]></content>
      <categories>
        <category>杂谈</category>
        <category>小日子</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[在cmd里设置环境变量[Windows]]]></title>
    <url>%2Fposts%2F3d836e58%2F</url>
    <content type="text"><![CDATA[不得不吐槽一下：在Windows的系统里找了环境变量的设置，但是就是不能生效，不知道为啥。最后cmd那里就搞定了2333主要命令:set, setx 添加环境变量至系统就以我想添加miniconda的路径为例：path后面直接添加路径就可以了（只对当前的cmd有效）1set path=%path%;C:\Users\modi\Miniconda3\Scripts 如果像永久生效的话，命令改成下面这样的，用命令setx 1setx PATH "%PATH%;C:\Users\modi\Miniconda3\Scripts" 查看当前所有可用的环境变量1set 设置临时的环境变量1set temp = "D:\temp" 查看某个环境变量12345set %PATH%set temp = "D:\temp"set %tempecho %PATH%echo %TEMP%]]></content>
      <categories>
        <category>技术</category>
        <category>windows</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[情不知所起，一往而深]]></title>
    <url>%2Fposts%2Fe4cc009%2F</url>
    <content type="text"><![CDATA[“我会一直等到你变好的那天，如果你还没有变好，我只能等你一辈子了” “我喜欢抱着你，靠着你，躺在你怀里，也喜欢你愿意依靠我，抱着，趴着或躺着” 有时候这么想着想着，便想到了《牡丹亭》里的，“情不知所起，一往而深”， 想起了梁祝化蝶，想起了三毛荷西。 忘了为什么喜欢的哈尼了，说是忘了，也算不得忘了，一直以来就不知道为什么喜欢的哈尼。 就是喜欢了吧，说不出喜欢的原因。 说起这个，想起了陈绮贞的歌: 旅行的意义。 只是对说不出爱你的原因很有感触吧，其他的倒是不一样。列出来便是这样的了： 旅行的意义（陈绮贞，摘部分） 旅行的意义 （我们的） 你看过了许多美景 一起看过了许多美景 你看过了许多美女 一起看过了许多美女 你迷失再地图上每一道短暂的光阴 一起迷失在Python里每一段code上短暂的光阴 你品尝了夜的巴黎 一起品尝了夜的紫荆 你踏过下雪的北京 一起踏过下雪的园子 你熟记书本里每一句你最爱的真理 手机里记录着我爱你的每一道身影 却说不出你爱我的原因 说不出我爱你的原因 却说不出你欣赏我哪一种表情 只知道喜欢你的每一种表情 却说不出再什么场合我曾让你分心 只知道有你在的场合都让我安心]]></content>
      <categories>
        <category>杂谈</category>
        <category>小日子</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[好用的学习应用]]></title>
    <url>%2Fposts%2F39d1af20%2F</url>
    <content type="text"><![CDATA[不定期更新一些自己常用的学习的应用和网站 文献管理 Mendley个人很喜欢的文献管理软件，可以读pdf也可以导出文献，也有插件。非常容易上手 Reaearcher账号可以跟mendley绑定，绑定后可以把文献发送到mendley.手机端可follow多种文献。昨天才发现nature有科幻小说。 搜索 Google Scholar 翻译 Google Translation 写作 小书匠markdown写作，超级推荐吧。目前在用 LaTEX也就这两天才用的，跟markdown很像吧。]]></content>
      <categories>
        <category>资源</category>
      </categories>
      <tags>
        <tag>学术</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大脑训练（brain training）真的有效么？]]></title>
    <url>%2Fposts%2F3715ed0d%2F</url>
    <content type="text"><![CDATA[打着可以训练大脑能力的APP真的挺多的，实际上，其效果的研究并不是很多。曾经玩过一些这类的APP，但是也没坚持玩。记忆中这些app很多任务都是与记忆相关的，多是短时记忆的。这一篇在frontier上发表的研究：大脑训练（brain training）真的有效么？就是对这个问题进行了细致的探讨。原文链接：Brain Training in Children and Adolescents: Is It Scientifically Valid?以下是简单地翻译摘要部分。有心情再补上其他东西吧. 翻译的比较粗糙，阅读原文体验更佳。 背景再现在的成人和儿童之中，大脑训练类的产品越来越流行。虽然现在目前的市场的目标用户是普通大众，但是对于特定的脑损伤人群可能会有更多的价值。这篇关于大脑训练产品的文献综述分析了这些产品的功效，也考虑到其再实际应用方面存在的方法局限性。 方法基于截至到2017年3月的PubMed 数据库，文献资料包括： 有关于儿童或青少年使用大脑训练的经验数据以及对近转移（NT）和/或远转移（FT）和/或神经可塑性的任何影响 将大脑训练用于认知训练的目的 商业可用的训练应用 1990s以来为儿童设计的电脑程序 相关印刷及同行评议材料 结果数据库搜索有16402条文献，其中70符合评审的标准。然后根据神经可属性，远近转移和长期效应以及应用方法进行了分类。关于效应，只有10份研究支持的神经可塑性，大多数的训练平台只是基于这些概念，并没有提供有效的证据。36篇研究说明有长转移（其中7项非独立），只有11项在随访时保持长时转移。考虑研究方法，40项研究没有进行醒随机和控制设计;而对于那些随机化的研究，只有9项研究是双盲实验，只有13项研究再试次中存在active control 结论总的来说，很少有独立的研究存在长期转移以及长期的影响，大多数的研究结果只是发现存在近转移。缺乏双盲实验，缺乏控制操来排除其他可能的因素。基于目前的研究结果。大脑训练可以商业使用的产品并没有和预期一样，或者说并没有像这些产品广告里说的一样。]]></content>
      <categories>
        <category>文献</category>
      </categories>
      <tags>
        <tag>大脑训练</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018阅读清单]]></title>
    <url>%2Fposts%2F7dcd2451%2F</url>
    <content type="text"><![CDATA[2018年在读以及计划阅读的书籍 学习Deep learning数据处理R 推理埃勒里·奎因系列 鬼怪《中国神话史》《子不语》《中华神秘文化》：相术文化《中国民俗文化大观》《魂魄》 性《性张力下的中国人》 经典《诗经》 其他《梦里花落知多少》《黄金时代》《自卑与超越》《查泰莱夫人的情人》《房思琪的初恋乐园》]]></content>
      <categories>
        <category>项目</category>
        <category>清单</category>
      </categories>
      <tags>
        <tag>阅读</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018观影清单]]></title>
    <url>%2Fposts%2F69343f66%2F</url>
    <content type="text"><![CDATA[在这里会记录下自己看的影视剧，然后会有一些简短的评价吧，也可能没有。有一些影视可能没看过，不过脑子里突然想起来的，没怎么看的，也会放在列表里面记录下自己所见所闻吧。不知不觉写了那么多了。。。等之后再填坑（等书单list写完，我再看看） 院线电影 2018 超时空同居https://movie.douban.com/subject/27133303/和女朋友一起看的看得挺开心的 2018 复仇者联盟3: 无限战争https://movie.douban.com/subject/24773958/和男朋友一起看的和男朋友在一起开心 私人电影 1976 怪宴https://movie.douban.com/subject/1303545/ 1980 405谋杀案https://movie.douban.com/subject/1303698/ 1982 窈窕淑男 Tootsieshttps://movie.douban.com/subject/1297737/ 1995 非常嫌疑犯https://movie.douban.com/subject/1292214/ 2002 八美图https://movie.douban.com/subject/1299292/ 2002 猫的报恩https://movie.douban.com/subject/1304970/ 2014 记忆中的玛妮https://movie.douban.com/subject/25790555/ 2014&amp;2017 Paddington 1&amp;2https://movie.douban.com/subject/2998373/https://movie.douban.com/subject/26340419/ 2015 海街日记https://movie.douban.com/subject/25895901/ 2017 春宵苦短，少女前进吧https://movie.douban.com/subject/26935251/ 2017 Kingsman.The Golden Circlehttps://movie.douban.com/subject/26378579/ 电视剧 2018 贷款买个男朋友https://movie.douban.com/subject/30155216/ 2005&amp;2006 神秘博士 S1&amp;S2https://movie.douban.com/subject/1763834/https://movie.douban.com/subject/3634228/ 2001&amp;2003 重案六组 第一部&amp;第二部https://movie.douban.com/subject/2190981/https://movie.douban.com/subject/2190973/ 2004 案发现场 第一部https://movie.douban.com/subject/2347276/ 2004 Hustle S1https://movie.douban.com/subject/1763205/ 2014&amp;2015&amp;2017 废柴舅舅 S1~S3 2011 孔雀翎https://movie.douban.com/subject/5905773/ 2003 曼哈顿爱情故事https://movie.douban.com/subject/1480841/ 马普尔小姐探案 S4&amp;S5 2018 非自然死亡https://movie.douban.com/subject/27140017/ 2018 加油吧，威基基https://movie.douban.com/subject/27603684/ 2018 基督山伯爵 华丽的复仇 连载中https://movie.douban.com/subject/30140042/ 2018 使女的故事 S2 连载中https://movie.douban.com/subject/27036735/ 2018 9号秘事 S4https://movie.douban.com/subject/26961208/ 2017 黑镜 S4https://movie.douban.com/subject/26898192/ 2016 东京女子图鉴https://movie.douban.com/subject/26921674/ 1997~2014 Jonathan Creek S1~S5 2010 金牌女王https://movie.douban.com/subject/4845429/ 大侦探波洛https://movie.douban.com/subject/2030879/零零散散挑了几集看。看到了Hustle里的Danny 和Stacie，Doctor Who 第一季里的Doctor，写着写着突然想起来，还有那个Doctor Who里面的那个叫啥的怪物来着。。一时忘了名字了。还有9号秘事里的主演。英剧的世界真是小呀。虽然相比于Poirot，更喜欢Jonathan里面的案子，Poirot太心理学了。感觉不讲证据，有点扯。但是Poirot还是很萌的。 不得不说，画得太胖了，胡子画得也不对，Poirot还是有头发得2333 动画与番剧 2013&amp;2015&amp;2017 Rick and Morty S1~S3https://movie.douban.com/subject/11537954/https://movie.douban.com/subject/25865470/https://movie.douban.com/subject/26592971/ 2018 超能力女儿（连载中）https://movie.douban.com/subject/27140040/ 纪录片 2012 Indie Game: The Moviehttps://movie.douban.com/subject/7015793/ 2015 The Jinx: The Life and Deaths of Robert Dursthttps://movie.douban.com/subject/26292143/ 2018 书迷https://movie.douban.com/subject/30200070/其他 2015 看理想：一千零一夜https://movie.douban.com/subject/26314530/]]></content>
      <categories>
        <category>项目</category>
        <category>清单</category>
      </categories>
      <tags>
        <tag>影视</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[电子书搜索平台]]></title>
    <url>%2Fposts%2Fb2078b98%2F</url>
    <content type="text"><![CDATA[一些个人常用的电子书搜索平台 常用链接http://gen.lib.rus.ec/非常喜欢这个网站，在我看来是充满着理想主义的网站。可以读一下这个http://custodians.online/小王子里的一段话：“It is of some use to my volcanoes, and it is of some use to my flower, that I own them,” he says, “but you are of no use to the stars that you own”. https://www.gutenberg.org/古登堡计划，应该是不需要担心版权问题的 https://sci-hub.tw/游走在边缘的文献下载平台“to remove all barries in the way of science”]]></content>
      <categories>
        <category>资源</category>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>电子书</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu下安装dlib步骤]]></title>
    <url>%2Fposts%2F6af76d8%2F</url>
    <content type="text"><![CDATA[原文链接：https://www.learnopencv.com/install-dlib-on-ubuntu/按照原文的步骤安装，没有什么太大的问题，主要是python创建虚拟环境那里报了错误。按照网上查找的资料是可以解决的。不过最后自己选择了用conda管理环境，感觉也挺方便的。 介绍Ubuntu上装Dlib的步骤 Step 1：安装 OS libraries123sudo apt-get install build-essential cmake pkg-configsudo apt-get install libx11-dev libatlas-base-devsudo apt-get install libgtk-3-dev libboost-python-dev Step 2：安装 Python libraries123sudo apt-get install python-dev python-pip python3-dev python3-pipsudo -H pip2 install -U pip numpysudo -H pip3 install -U pip numpy 利用python的虚拟环境来安装Python库（对于区分不同环境的使用是有益处的，评：其实用比如conda创建虚拟环境也可以） 123456789101112131415161718192021222324252627282930# Install virtual environmentsudo pip2 install virtualenv virtualenvwrappersudo pip3 install virtualenv virtualenvwrapperecho &quot;# Virtual Environment Wrapper&quot; &gt;&gt; ~/.bashrcecho &quot;source /usr/local/bin/virtualenvwrapper.sh&quot; &gt;&gt; ~/.bashrcsource ~/.bashrc ############ For Python 2 ############# create virtual environmentmkvirtualenv facecourse-py2 -p python2workon facecourse-py2 # now install python libraries within this virtual environmentpip install numpy scipy matplotlib scikit-image scikit-learn ipython # quit virtual environmentdeactivate###################################### ############ For Python 3 ############# create virtual environmentmkvirtualenv facecourse-py3 -p python3workon facecourse-py3 # now install python libraries within this virtual environmentpip install numpy scipy matplotlib scikit-image scikit-learn ipython # quit virtual environmentdeactivate###################################### Step 3：编译DlibStep 3.1: 编译 C++ binaryDlib的作者，Davis King，建议通过CMake使用Dlib。但是如果只是把Dlib当作库来使用的话就按照以下步骤 12345678910wget http://dlib.net/files/dlib-19.6.tar.bz2tar xvf dlib-19.6.tar.bz2cd dlib-19.6/mkdir buildcd buildcmake ..cmake --build . --config Releasesudo make installsudo ldconfigcd .. 可以使用pkg-config为Dlib提供路径 1pkg-config --libs --cflags dlib-1 Step 3.2：编译 Python module激活 Python 虚拟环境 12345############ For Python 2 ############workon facecourse-py2 ############ For Python 3 ############workon facecourse-py3 编译并安装Dlib的Python模块 1234567# move to dlib&apos;s root directorycd dlib-19.6python setup.py install# clean up(this step is required if you want to build dlib for both Python2 and Python3)rm -rf distrm -rf tool/python/buildrm python_examples/dlib.so 在这里删除了几个文件和文件夹（代码段# clean以下为删除文件夹命令），因为Dlib对python2和python3生成的Python 模块都是用相同的名字。如果在python2环境中运行 setup.py, 会生成dlib.so在python_examples文件夹中。然后如果取消激活Python2的虚拟环境，激活Python3的虚拟环境，运行setup.py，就会替代在python2环境中生成的dlib.so，和python_examples.当你尝试从这个目录中运行任何python_example时，它将导入这个dlib.so，而不是位于site-packages或dist-packages目录中的一个，并引发错误。尽管不会出现此错误，但是dlib.so的本地副本不存在于当前目录中，但最好删除本地副本以避免混淆。 为了保持一致性，使用相同的源代码安装了Dlib的Python和C ++二进制文件。 如果只是打算使用Dlib的python模块，也可以就使用pip安装 1pip install dlib 安装完成后可以推出python虚拟环境 1deactivate 如果需要运行运用dlib的python脚本，首先激活相应的python虚拟环境]]></content>
      <categories>
        <category>技术</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>dlib</tag>
        <tag>unubtu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux命令grep]]></title>
    <url>%2Fposts%2F8cd3a42b%2F</url>
    <content type="text"><![CDATA[趁着有空，把最近常用的／新学到的关于linux的命令整理出来。第一波：grep。grep 是一个非常常用的，查询／匹配用的命令。基本用法：1grep apple test.txt 参数含义：12345$ man grep grep [-abcdDEFGHhIiJLlmnOopqRSsUVvwxZ] [-A num] [-B num] [-C[num]] [-e pattern] [-f file] [--binary-files=value] [--color[=when]] [--colour[=when]] [--context[=num]] [--label] [--line-buffered] [--null] [pattern] [file ...] 小技巧：123456# match tab in grep 匹配制表符grep apple$'\t' test.txt# logic and in grep 逻辑与# logic or in grep 逻辑或 未完待续…]]></content>
      <categories>
        <category>技术</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Deep leaning处理EEG数据-braindecode工具箱]]></title>
    <url>%2Fposts%2Fc786e694%2F</url>
    <content type="text"><![CDATA[最近在看braindecode的github文档，简单地做一下笔记记录，如果有需要可以随时查看 pytorch官网没有windows的安装方式，所以为了之后省事，所以改用ubuntu 文档链接 必要的环境安装 anaconda 从官网下载安装即可，由于涉及到EEG处理等心理学的工具箱，目前这些工具箱还没支持python3 所以需要有python2的环境，选择安装python2版本的或者是装2和3两个版本 numpy conda装numpy，如果没有就装一下好了 mne 脑电处理的python工具包 pytorch pytorch官网http://pytorch.org/选择需要的安装包，下载，在conda下安装(在windows下装好像还很麻烦。。。) braindecode 未完待续]]></content>
      <categories>
        <category>技术</category>
        <category>工具箱</category>
      </categories>
      <tags>
        <tag>braindecode</tag>
        <tag>eeg</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python2和3版本管理[Win]]]></title>
    <url>%2Fposts%2Fb5a05a6e%2F</url>
    <content type="text"><![CDATA[找python中使用的心理学工具包时，比如MNE，只能在python2中使用， 所以就想找一下怎么把2，3都装在一起。 在网上找了一下教程，然后呢，自己记录个人觉得比较简单的方式 目前只有windows 系统的，之后可能会考虑怎么倒腾linux。 安装anaconda从链接中下载需要的anaconda的版本，如果只需要2的话直接下python2的版本，需要3的话下3的 这个安装就不多说了 https://www.anaconda.com/download/ 在 anaconda prompt中创建python2的环境打开anaconda prompt 输入以下代码（name之后环境名字，取什么影响不大，不过方便起见起python2或者能记得住的名字） 创建环境名，下载相应python版本 1conda create --name python2 python=2.7 激活与取消激活激活python2环境：早prompt中输入 1activate python2 如果需要取消激活环境，则输入 1deactivate python2 安装其他工具包在新的环境中正常安装就可以了]]></content>
      <categories>
        <category>技术</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>anaconda</tag>
        <tag>python多版本</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[tmux使用]]></title>
    <url>%2Fposts%2Fcb2d43c3%2F</url>
    <content type="text"><![CDATA[自己在集群上需要用到tmux，把自己最近的使用心得总结一下。 简介tmux的作用主要有亮点：一是终端复用，二是保存工作状态。 安装linux下1sudo apt-get install tmux mac os1brew install tmux 基本信息tmux的界面包括会话session，窗口window，面板panel。每次开启tmux，即自动创建了session 1 的 window 1。 bind-key：为防止快捷键与系统快捷键混淆，tmux提供了快捷键前缀。每次先按下快捷键前缀，再按下相应快捷键，默认快捷键为control-b（⌃b for mac）。 使用启动tmux在终端中输入： 1tm [id] 将进入名为 id 的session，若session id不存在，则创建。 在集群中多人使用，每人开不同的session。需要多窗口开多个window或panel即可。 常用操作详细快捷键窗口 Option cmd/shortkey new bind-key c rename bind-key , index bind-key [1,2,…] next bind-key n previous bind-key p kill bind-key x 面板 Option cmd/shortkey split(horizontal) bind-key % split(vertical) bind-key “ switch bind-key ↑ ↓ ← → full screen bind-key z mini screen bind-key z scroll mode bind-key [ quit scroll mode q kill bind-key x 自定义设置]]></content>
      <categories>
        <category>技术</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>tmux</tag>
        <tag>terminal</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python屏幕截图与鼠标模拟]]></title>
    <url>%2Fposts%2F5deff486%2F</url>
    <content type="text"><![CDATA[python截图解决方案windows下需要pywin32 截图一种方法是直接使用PIL123from PIL import ImageGrabim = ImageGrab.grab()im.save(addr,'jpeg') 鼠标／键盘模拟一个python库：https://github.com/SavinaRoja/PyUserInput/wiki/Installation可以直接用pip 安装1pip install PyUserInput 贴一段代码 1234567891011121314151617181920212223242526272829303132333435363738394041# -*- coding: utf-8 -*- import pythoncom, pyHook def OnMouseEvent(event): print 'MessageName:',event.MessageName print 'Message:',event.Message print 'Time:',event.Time print 'Window:',event.Window print 'WindowName:',event.WindowName print 'Position:',event.Position print 'Wheel:',event.Wheel print 'Injected:',event.Injected print '---' # 返回 True 可将事件传给其它处理程序，否则停止传播事件 return True # 创建钩子管理对象 hm = pyHook.HookManager() # 监听所有鼠标事件 hm.MouseAll = OnMouseEvent # 等效于hm.SubscribeMouseAll(OnMouseEvent) # 开始监听鼠标事件 hm.HookMouse() # 一直监听，直到手动退出程序 pythoncom.PumpMessages()# 这个例子程序捕捉了所有的鼠标事件，实际上我只需要捕捉向下滚动滚轮的事件即可。翻了下文档，对应的是MouseWheel，之后只要判断event.Wheel是否为-1即可。# -*- coding: utf-8 -*- import pythoncom import pyHook import time import win32api import win32con def onMouseWheel(event): if event.Wheel == -1: win32api.mouse_event(win32con.MOUSEEVENTF_LEFTDOWN, 0, 0) time.sleep(0.05) win32api.mouse_event(win32con.MOUSEEVENTF_LEFTUP, 0, 0) return True hm = pyHook.HookManager() hm.MouseWheel = onMouseWheel hm.HookMouse() pythoncom.PumpMessages() # 这段程序讲鼠标滚轮映射为鼠标单击]]></content>
      <categories>
        <category>技术</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>截图</tag>
        <tag>鼠标模拟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo的NexT主题优化]]></title>
    <url>%2Fposts%2Fd4772490%2F</url>
    <content type="text"><![CDATA[记一下自己折腾hexo时候做的事情吧。也方便各位参考。挖个坑，找机会填 修改页面背景修改menu图标添加 categories，tags，about添加版权修改底部信息添加自定义分类修改首页样式（还没做）添加sitemap和搜索引擎（还没做）添加评论添加星标添加字数统计与访问量修改标签#符号添加社交链接]]></content>
      <categories>
        <category>技术</category>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[图标库fontawesome]]></title>
    <url>%2Fposts%2Fe33c66fa%2F</url>
    <content type="text"><![CDATA[推荐一个方便的图标资源 网址：http://fontawesome.io 在hexo页面上的使用： 打开next主题的配置文件，找到如下位置： 1234567891011121314# ---------------------------------------------------------------# Menu Settings# ---------------------------------------------------------------# When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash from link value (/archives -&gt; archives).# Usage: `Key: /link/ || icon`# Key is the name of menu item. If translate for this menu will find in languages - this translate will be loaded; if not - Key name will be used. Key is case-senstive.# Value before `||` delimeter is the target link.# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, question icon will be loaded.menu: home: / || home about: /about/ || user-circle categories: /categories/ || bars tags: /tags/ || tags 对menu中的每个条目，双竖线后面接的就是图标在网站中的名字，比如下图中的adversal。就可以在next主题中看到相应的图标。注：根据我自己测试有些图标会不成功，似乎不是语法的问题，可能是权限问题。如果遇到了这种情况就换一个吧。]]></content>
      <categories>
        <category>资源</category>
        <category>图标</category>
      </categories>
      <tags>
        <tag>图标</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2017秋日剧推荐]]></title>
    <url>%2Fposts%2F9800a1d5%2F</url>
    <content type="text"><![CDATA[2017年，这一年看了三部日剧，觉得很有意思。在这里推荐一下； 《过保护的加穗子》，《成人高校》和《监狱里的公主大人》 都包含着成长着一个大的主题，分别侧重为，个人与家庭，亲密关系的发展，社会关系。（当然这只是我自己概括的） 正文就是我罗嗦的吐槽了。 过保护的加穗子看这部片子的机缘是，在微博上看到了女主的照片，以及男女主之间的身高差。 觉得真是萌翻了，妹子好可爱呀！！于是便找来这部片子看.(看脸的人，没救了。) 其实这个设定很像之前的一部日剧《妈妈，我可以不做你的女儿吗》，与那部剧以诡异伦理为主的 豆瓣链接：https://movie.douban.com/subject/27062635/ 这部剧的整体比较轻松愉悦，轻松愉悦的而同时还能体会到成长的感觉。 以及女主真的很可爱啊。 成人高校故事的设定是，政府为了降低少子化（我也不确定这样的表述对不对），秘密成立了一所成人高校，在全国挑选了一部分人入学。这些学生都是30岁以上的处子。一旦破处就可以算是可以毕业。 剧中将几类人分到几个主角之上，摩擦与探索构建起了整个故事的架构。虽然后面有点崩，但是总体来说还是很有意思的 我觉得有意思的是，整个剧提到了两性关系与性的关系。 如何处理两性关系，如何对待性态度，这两个问题在长期的教育体系中是很缺失的。 想起百度的网页经常出现的“初中早恋怎么办”，从小到大，家长老师似乎都在默默地暗示，谈恋爱是一件危险的事情 转眼之间，30多岁时，便絮絮叨叨找不到男朋友或女朋友的事情。这么想想确实可笑。犯罪的案件中不少是由与情杀引起的 还有的是钱，钱也是个不好的东西？可是似乎又默默地暗示一切向钱看齐。我所说的这一些还并未找资料研究，仅凭我直观的感觉。 处理情或性有问题，应该是寻找解决或者调解的方式，一言不合就杀人，这是亲密关系能力的问题 豆瓣链接：https://movie.douban.com/subject/27130295/ 监狱里的公主大人监狱的公主大人看完了 意料之中的结局，然而仍然仍看得很感动 这是一个披着探案外衣的温情日剧。 在素不相识的监狱里相遇，为了一个无辜的公主，愿意为她而再次冒险。 看的时候，会想这样的一个问题，人究竟该为什么活着（最近时不时的会有这样的想法，喝杯水时都忍不住纠结） 某些程度上来说，人只要吃饱了喝足了便不会死，可是人的欲望不止，比如马斯洛的需要层次的理论 虽然知道最后的结局会是怎样，但是还是在坏人最后获得审判时，看着大妈们的脸上的表情而激动，太棒啦。 看着最后电视上的江户酸奶广告而表示欣慰。 豆瓣链接：https://movie.douban.com/subject/27097746/ 小结觉得写评论还是一件挺难的事情的，纠结了许久也憋不出几句正常的话。不过怎么说呢。憋了那么久总算憋完了。]]></content>
      <categories>
        <category>娱乐</category>
        <category>影视</category>
      </categories>
      <tags>
        <tag>日剧</tag>
        <tag>2017秋</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Matlab-tricks]]></title>
    <url>%2Fposts%2F57dbd055%2F</url>
    <content type="text"><![CDATA[matlab小技巧，其实也不是小技巧，就是一些笔记吧。。。或者说吐槽。。。废话好多。。。 smooth平滑数据 用法12345678yy = smooth(y)yy = smooth(y,span) % span 一定要是奇数，如果span设置为奇数，那么会自动减1yy = smooth(y,method) % 有六种方法yy = smooth(y,span,method)yy = smooth(y,'sgolay',degree)yy = smooth(y,span,'sgolay',degree)yy = smooth(x,y,...)gpuarrayYY = smooth(gpuarrayY) smooth 当中默认的平滑参数是5步，普通的滑动平均具体而言yy(1) = y(1)yy(2) = (y(1) + y(2) + y(3))/3yy(3) = (y(1) + y(2) + y(3) + y(4) + y(5))/5yy(4) = (y(2) + y(3) + y(4) + y(5) + y(6))/5 dlmwrite可以保存多种格式的文件，具体再matlab中可以查找， 不考虑那么多，可以保存多种格式的数据，txt，dat,csv 1dlmwrite(filename,M)% M is data]]></content>
      <categories>
        <category>技术</category>
        <category>Matlab</category>
      </categories>
      <tags>
        <tag>Matlab</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Perceptual integration rapidly activates dorsal visual pathway to guide local processing in early visual areas]]></title>
    <url>%2Fposts%2Fe939781d%2F</url>
    <content type="text"><![CDATA[在知觉整合过程中，dorsal快速激活，并且指导后续的EVA中的局部信息。在视觉处理过程中，视觉系统可以有效的将物体的局部信息整合为整体信息，这一过程被称作知觉整合。就比如从具体的细节中抽象出人形，或者物体的轮廓。在以往的研究之中，视觉的腹侧通路（这通路被认为是与物体识别相关的），其高级区能够获取高级信息，并由高级向低级方向调节低级感觉区域的活动。而背侧通路，往往是与where和how相关的。在近些年的研究之中，也有发现背侧通路对于整体的信息有着调节的作用。比如在皮层损伤和TMS的研究中发现，腹侧通路受损伤后的患者仍对物体/或者说是目标的结构信息仍存在敏感性。但是仍不清楚，背侧通路是否是接受腹侧视觉通路的信号，然后在知觉整合过程中被激活；或者是背侧通路是有着相对独立的调整功能。这篇文章就是对这样的一个知觉整合问题做了一系列的研究，主要是对相关的脑区以及各自的响应的时空关系。 作者采用了一个叫glass pattern 的实验范式，记录MEG数据，从数据中提取TRF，并进行源定位 。 实验结果发现，再可以知觉到整体的情况下，会引起背侧通路的响应，具体位置主要是IPS，响应的时间再100ms内，优先于引起处理局部信息的EVA的信号响应。IPS-V3a-V1 实验范式Glass Pattern 是由Glass 在1962年提出的，随机点阵经变换之后和自身的叠加能形成一个整体的pattern。每个店都旋转一个小角度，可形成同心圆每个点都向径向运动，可以形成放射状 在实验中，作者对在这个范式，用了coherence和luminance进行了调整 TRFTRF是在2012年提出的一个新的算法，TRF是大脑信号对刺激序列中的刺激响应。MEG信号与刺激之间的关系可以用TRF表示，TRF与刺激序列的卷积就可以得到。 实验结果发现，在视觉整体处理的过程之中，背侧视觉通路能有响应并调节具体的细调整 note个人比较感兴趣的是TRF的方法，这个方法能够不用标记事件而能够进行分析。关于具体的实验操作也是比较值得学习的。 暂且先写到这里。 文献原文：Liu L, Wang F, Zhou K, Ding N, Luo H (2017) Perceptual integration rapidly activates dorsal visual pathway to guide local processing in early visual areas. PLOS Biology 15(11): e2003646. https://doi.org/10.1371/journal.pbio.2003646http://journals.plos.org/plosbiology/article?id=10.1371/journal.pbio.2003646]]></content>
      <categories>
        <category>文献</category>
        <category>心理学</category>
      </categories>
      <tags>
        <tag>整体知觉</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python小技巧合辑]]></title>
    <url>%2Fposts%2F1c0e2abb%2F</url>
    <content type="text"><![CDATA[总结一下自己平时用到，或者发现到了一些python的小技巧和小trick。放到这里的多半比较简单，不值得单独讲一讲，汇总以备查阅吧。 多变量迭代 对多个迭代器调用zip可以同时迭代多个iterable，其中一个停止则迭代停止。for循环神器。 可以从itertools中导入zip_longest，其会在多个迭代器中某一个迭代器结束后填充none，直到全部迭代器结束 12345678# zip &amp; zip_longest 样例a = [1, 2, 3]b = [5, 6, 7, 8]for i, j in zip(a, b): print(i, j, end=";\t", sep=",")print()for i, j in zip_longest(a, b): print(i, j, end=";\t", sep=",") 输出如下： 121,5; 2,6; 3,7; 1,5; 2,6; 3,7; None,8;]]></content>
      <categories>
        <category>技术</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[卡卡颂中文规则]]></title>
    <url>%2Fposts%2F4ea8f927%2F</url>
    <content type="text"><![CDATA[v1.1 增加高塔v1.0 基础版规则&amp;河流本文打开方式： 河流已经默认包括在基本版中，没有河流的话只影响起始版图，不会影响其他任何规则。 其他扩展包按需无视即可。 有其他问题欢迎各位看官评论。 关于卡卡颂Carcassonne，又名卡卡颂，是一种适合2至8人的德式桌上游戏。这款游戏由 Klaus-Jürgen Wrede设计，曾经得过2001年的年度游戏奖。Carcassonne的出版商是Hans im Glück，简称HiG。每款新的卡卡颂游戏一般均由该公司首先推出，但其只发行德语版本。而其他语言的版本则随后由各国的 桌游代理商发行，其中最有名的是英文版本的代理商 Rio Grande Game，简称Rio或RGG。通常RGG与HiG发行的版本均相同，只存在个别例外情况。然而，由于卡卡颂扩展众多，除了HiG和RGG发行大型产品供售卖外，受官方承认的其他微型版本也层出不穷，最著名的就是德国桌游杂志Spielbox发行的一系列微型扩展。 游戏目标通过在卡卡城放置随从，获得更多的分数。分数最高的游戏者将获得最后的胜利。 版图介绍基础版基础版游戏共包括72块普通版图, 12块河流版图，40名随从和一个计分版。 版图中包括城市，道路，修道院和草地四种地形（河流版图包含河流）。玩家在放置版图时，必须使得河流，城市和道路合理地连接起来。游戏中，随从可以放置在任何一块草地，道路，修道院和城市中。为方便区分，可以让放在草地中的随从卧倒，以示区别。 高塔高塔扩展包括18张新的版图，上面标有塔楼底座的标志；以及30个高塔块，用于在地图中建造高塔。 游戏还提供了一个可以放置所有版图的塔，小幅提升游戏体验，不用也不影响游戏。 高塔的控制范围：高塔的控制范围包括本身所在的格子，和上下左右四个方向延伸的，数目与塔高度相同的格子。例如一层高的塔可以控制的是周围5个格子，而3层高的塔可以控制周围13个格子。 游戏准备游戏开始时，为每名玩家发放8个随从，其中每人的一个随从留在记分板上记分，余下7名随从留在手中待命，处在待命状态的随从可以以任何放置被合理地使用。 如果使用高塔扩展，为每名玩家发放高塔块，数目依下表： 人数 2 3 4 5 6 高塔块 10 9 8 7 6 挑出河流起始版图（山顶的源泉）和湖泊版图，洗匀余下的10块河流版图，他们会被最先放置。72块普通版图和高塔扩展的版图洗匀，放在版图塔中（或者直接放在桌子上）。 将河流起始版图放在桌子中央。 游戏进行中，只有在河流版图全部安放完毕后，才放置普通版图。故不要将河流版图和其他版图洗混。湖泊版图必须是河流版图中最后放置的，故将其挑出，在其他河流放完之后放置。放置湖泊之后即开始使用普通版图。总之，最终的使用顺序是：起始版图 -&gt; 10块河流 -&gt; 湖泊 -&gt; 其他版图 游戏流程游戏逆时针进行，年龄最小的玩家开始第一回合。每一回合玩家依次执行下面的行动（顺序不可颠倒）： 放置版图 每一回合，玩家抽取一张版图，并向所有游戏者展示。之后，将这块版图放在城市中。 需保证草地，道路和城市都是合理连接的。 如果该版图无法合理放置，则将其放回盒子，重新抽取。 如果最后一块版图被放置，那么游戏结束，立即开始终局记分。 放置随从 放置版图后，当前玩家可以在安排一个随从在道路，城市，修道院或者草地上。玩家也可以选择不放置随从。 随从必须放置在刚刚安放的版图上。 不可以在已有随从的区域放置随从。区域不论大小，只要连通即算一块区域。 计算得分 如果新加入的拼图使任何一个城市／道路／修道院完成，那么立即计算相应的分数。 记分后得分的随从会返回玩家手中待命。 放在草地上的随从不会回到玩家手中，他们只有在终局记分时才有用处。 记分包括在刚刚放置的版图上的记分。 高塔上的随从记分同下面的随从，随从所处的地形取决于塔基所处的地形。 高塔行动 只有在加入高塔扩充包之后下面的规则方可生效。 每个玩家只能从下方a-c中选择一项行动。 玩家可以在任何一个塔楼或塔楼标记上放置一块新的高塔块。若如此做，该玩家可以在他刚放好的塔楼的控制范围内，俘虏一名其他玩家的随从，即将该随从拿回自己手中。 玩家可以在一个高塔顶放置一个待命的随从。这样他便占领了这座塔楼，同时这名随从被塔楼保护，从而不会被俘虏。 如果玩家有随从被俘虏，玩家可以选择用三点分数赎回该随从。即自己扣减3分，对手增加3分。 如果两名玩家同时俘虏了对方的随从，则交换他们的俘虏。这一过程是强制，自动的。 若当前没有塔楼底座，则无法进行任何行动。 在塔楼被某个玩家占领前，塔楼是中立的，任何玩家都可以利用塔楼俘虏其他随从。 计分规则游戏进行中的记分游戏进行中，只要完成的城市／道路／修道院出现，立即对其记分。 完整城市: 如果城市的所有边界都处于封闭状态，则称其为一个完整城市。 构成完整城市的每一块版图计2分。 城市中每一面旗帜计两分。 如果城市只由两块版图组成，那么玩家只能获得两分，而不是4分。 通常情况下，一个城市中只会有一个随从，但如果多于一名随从出现在完整城市中，那么拥有最多随从在其中的玩家得到全部分数。如果并列最多出现，则他们都获得全部分数。 记分后，城市中的随从返回玩家手中。 例子： 玩家1和玩家2在一个6分的完整城市中各有1名随从，则玩家1得6分，玩家2也得6分。 玩家1在一个6分的完整城市中有2名随从，而玩家2在其中只有1个随从，则玩家1得6分，玩家2不得分。 完整道路: 如果道路两端分别连接到终点（连接城市或修道院）或岔路口，或者道路形成闭合的环，则称其为完整道路。 构成完整道路的每一块版图计1分。 通常情况下，一段道路上只会有一个随从，但如果多于一名随从出现在完整道路上，那么拥有最多随从在其中的玩家得到全部分数。如果并列最多出现，则他们都获得全部分数。 记分后，道路上的随从返回玩家手中。 例子参考完整城市。 完整修道院: 如果一个修道院周围的八个格子都被填充，则称其为完整修道院。 一个完整的修道院计9分。 记分后，修道院中的随从返回玩家手中。 终局记分终局记分中，先依上面的规则对所有的完整城市／修道院／道路进行记分，然后对未完整的城市／道路／修道院进行记分，最后计算草地分数。 不完整的城市 每一块构成不完整城市的版图计1分。 每一块旗帜计1分。 出现多名随从的处理同上。 不完整的道路 每一块不完整的道路计1分。 出现多名随从的处理同上。 不完整的修道院 修道院及其周围共九个格子中，每一块版图计1分。 草地记分 每一块有随从在上的草地，成为一块农场，其上的随从称为农民。 如果一块农场紧挨着一个完整城市，则称农场供养这个城市。同一城市可被多个农场供养，同一农场可以供养多个城市。 依次考察每一个完整的城市，只要一名玩家有农民供养了这个城市，不论个数，玩家可以从中得到4分。可能有多名玩家从同一个城市中得分。 草地记分结束后，获得最多分数的玩家取得胜利！ FAQ Q: 放置版图后，可否放置随从在城市／道路上，然后马上对其记分并取回该随从？ A: 这是可以的！只要放置之后，该城市／道路马上变得完整。 Q: 放置版图后，如果其他位置的某个城市／道路／修道院变得完整，可否将那里的随从记分后再布置到新放置的版图上？ A: 不可以！因为这样做违反了先放置，再记分的顺序。正确的的做法是先在新放置的版图上安排一名随从，然后记分并回收另一名随从。如果没有可以安排的随从，则只能回收一名随从而不能放置。 Q： 起始河流版图和湖泊版图周围的草地是联通的吗？ A： 是的！这两个版图上下的草地时联通的，不需要其他的草地就可以将其连起来。]]></content>
      <categories>
        <category>娱乐</category>
        <category>桌游</category>
      </categories>
      <tags>
        <tag>卡卡颂</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[昆虫棋中文规则]]></title>
    <url>%2Fposts%2Fbf131ed7%2F</url>
    <content type="text"><![CDATA[最近在淘宝上入了一盒hive，无奈中文的说明书实在是看不懂，于是只好找英文原版的自己翻译一份了。 昆虫棋 游戏目标 游戏的目标是围住另一位玩家的蜂后。所谓围住，指的是蜂后周围六个区域都有相邻的棋子，而棋子是哪一方的并不重要。也就是说如果一方的蜂后被自己的六个棋子包围，也算是被围住。如图：先达成这一目标的玩家即获得胜利。 名词解释 蜂巢：任意时刻，桌面上双方的所有的棋子构成了当前的蜂巢。蜂巢是唯一的，并且任何玩家不能在任何时候使之分裂。分裂指的是蜂巢变为两个独立的不相邻的部分的过程。游戏过程中，部分棋子可能会叠起来，形成一摞。当一枚棋子处在其他棋子上方的时候，统称其在蜂巢上方。 游戏准备 两名玩家选择自己的颜色（黑或白），然后将本方的蜂后和11枚其他棋子面朝上放在面前。 开始游戏 第一回合由白色方先开始。白色方首先在桌子上放置一枚棋子，然后对方放置一枚棋子与之相邻，这两枚相邻的棋子构成了本局中蜂巢的中心。其他棋子会围绕这两枚棋子放置，使得蜂巢不断扩大。随着游戏的进行，蜂巢的形状可能会不断变化。 随后的回合中，双方轮流采取以下行动之一：要么放置一枚新的棋子，要么让一枚已有的棋子进行行动(必须在蜂后放置后)。一名玩家不能主动放弃自己的回合，在可能的情况下他必须放置棋子或进行行动。但是，如果一名玩家不没有棋子可以放，也没有棋子可以行动，则他的回合将自动跳过，直到他可以合理地执行一种操作。 放置 棋子必须正面向上放置，新放置的棋子必须与至少一枚自己的棋子有相邻的边，同时不得与对方的棋子有相邻的边。新放置的棋子与原有的蜂巢构成了新的蜂巢。当棋子发生叠置时，该位置的颜色以最上面一个棋子的颜色计算。蜂后必须在第二、三或四回合被放入蜂巢。 行动 棋子在行动时，须遵循棋子自身的行动规则和以下的基本规则： 必须在已经放置蜂后之后，玩家才可以进行行动。 玩家只能行动属于自己的颜色的棋子。 棋子在行动时不必理会相邻棋子的颜色，即只要留在蜂巢中，就算合法。 若棋子在上一回合被对手移动过（即如果该棋子在之前的一回合内由于对方的能力而改变了位置），则其不能移动。 若棋子上方有任意一方的其他棋子，则该棋子不能移动。 任何时候，棋子离开原位置，到进入新位置的过程不得引起蜂巢的分裂。 行动过程包括三种可能的动作： 移动 最基本的动作。棋子在蜂巢中平移一格。移动过程中棋子始终处在蜂巢所在的桌面上。 移动过程是类似于在桌面滑动的形式。因此如果某个棋子由于周围的阻挡不能滑出原来的位置，那么其不可移动(攀爬不受此影响)。如果一枚棋子相邻的棋子不多余三枚，则其不会被阻挡而不能离开；若一枚棋子相邻的棋子数目为4，则需要判断该棋子自由的两边是否相邻，是的话可以移动， 不是则不能移动；如果一枚棋子周围的棋子多于4枚，则其必然不能移动. 攀爬 棋子离开桌面，停留在另一枚棋子上方。 在其他棋子上方的棋子可以落下到桌面上任意棋子相邻的位置。 只有瓢虫、甲虫和蚊子（还有扩充包中的螳螂，蟑螂，蜻蜓）可以进行攀爬。 跳跃 跳过沿同一直线的连续数个棋子，落在它们对面一侧的空地。 特殊能力 蜂后 QUEEN 蜂后无能力，只能移动一步。 蜘蛛 SPIDER x2 蜘蛛必须移动恰好三步。 蜘蛛移动过程中不能往返。 蚂蚁 ANT x3 蚂蚁可以移动任意多步，即可以停在桌面上任意位置。 甲虫 BEETLE x2 甲虫一次只能移动一步。 在桌面上，甲虫可以移动或攀爬到其他棋子上方。 当甲虫在其他棋子上方时，甲虫在蜂巢上移动，或者爬下来。 当甲虫在一枚棋子上方的时候，可以阻止下方的棋子行动。 甲虫可以攀爬到另一枚甲虫上方，阻止下方所有棋子行动。 蟋蟀 GRASSHOPPER x3 蟋蟀行动的方式是跳跃一次。 蚊子 NOSQUITO x1 蚊子可以复制其紧邻的任意棋子的能力。 如果蚊子与一摞棋子相邻，则其可以复制最上面的一个棋子的能力。 如果蚊子只与其他的蚊子相邻，则不能移动。 瓢虫 LADYBUG x1 瓢虫必须移动恰好三步，其中第一步移动到相邻某棋子上方，然后在蜂巢上移动一步，最后一步回到桌面。 换句话说，瓢虫的移动起始于桌面，终止于桌面，而途中瓢虫不得接触桌面。 潮虫 PILLBUG x1 潮虫可以移动一步，或者执行以下移动。 潮虫让紧邻自己的一枚棋子攀爬到自己上方，再使其落下到自己身旁其他位置。 潮虫不能对叠置的棋子中的任何一个使用其能力。 扩充包 螳螂 MANTLS 若螳螂在桌面上，则它无法移动，但它可以让自己身边的另一枚棋子移动到自己下方。 若螳螂在蜂巢上方，它可以像甲虫一样移动。 螳螂和甲虫在同一枚棋子的正反两面，游戏开始前玩家决定使用哪一角色。 苍蝇 FLY 如果苍蝇可以移动，未被阻隔，则苍蝇可以如常移动一步。 如果苍蝇的移动被阻隔，同时移除苍蝇不会造成蜂巢的分裂，则苍蝇可以飞到任何一个未被占据的空间。 苍蝇和蟋蟀在同一枚棋子的正反两面，游戏开始时玩家决定使用哪一角色。 蝎子 蝎子在蜂巢边缘移动恰好三步，如蜘蛛一样。 在任何时候，任何棋子都不可以棋子可以移动到蝎子上方，或者跳过蝎子，或者使蝎子移动。 蚊子不能复制上述特殊能力，但可以复制蝎子的移动能力。 蝎子和蜘蛛在同一枚棋子的正反两面，游戏开始前玩家决定使用哪一角色。 马蜂 Wasp 马蜂可以飞到一个未被占据的位置，如果目标位置只与对方的棋子（或者最上是对方棋子的一摞棋子）相邻。马蜂可以移出或移入被包围的空间。 马蜂可以与本方棋子相邻，只要这样的相邻不是由马蜂自己的移动造成的。 马蜂和蚂蚁在同一枚棋子的正反两面，游戏开始时玩家决定使用哪一角色。 蟑螂 行动时，蟑螂的第一步必须爬到蜂巢上方，同时最后一步必须落下，停留在桌面上。 在蜂巢上方的时候，蟑螂可以移动任意多步，只受一条限制：蟑螂不能跨过对方的棋子。 蟑螂的瓢虫在同一枚棋子的正反两面，游戏开始时玩家的决定使用哪一角色。 蜻蜓 Dragonfly 蜻蜓每次向前一步，然后向左前或者右前走一步。（类比象棋里面的马） 蜻蜓可以爬上蜂巢，并且停留在蜂巢上面。 如果一只蜻蜓开始移动时处在蜂巢上面，并且向一个未被占据的空间移动，则其可携带其下方的棋子一起移动，只要该行为不会引起蜂巢分裂。 蜻蜓不可以移动另一只蜻蜓。 蜻蜓和蚊子处在同一棋子的正反两面，游戏开始时玩家决定使用哪一角色。 蜈蚣 Centipede 蜈蚣可以在桌面上移动一步，或者与一个相邻棋子交换位置。 只有在蜈蚣与一枚相邻棋子都与一个共同的空地相邻时，才可以进行交换。 蜈蚣不可与蜈蚣或潮虫或上方有棋子的棋子交换位置，蜈蚣上方有棋子时不可交换位置。 蜈蚣与潮虫在同一枚棋子的正反两面，游戏开始前玩家决定使用哪一角色。 进行进阶游戏 除了蜂后之外的每个棋子都是双面的。开始游戏时，每人选择一个蜂后，然后从剩下的11枚棋子中选出自己想要的角色。游戏过程中不要将棋子翻面。 FAQ]]></content>
      <categories>
        <category>娱乐</category>
        <category>桌游</category>
      </categories>
      <tags>
        <tag>昆虫棋</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[山屋惊魂中文规则]]></title>
    <url>%2Fposts%2Ff96f39db%2F</url>
    <content type="text"><![CDATA[最近入坑小黑屋，草草整理一下规则放在这里，方便查阅，有时间的时候补充。 游戏准备 人物 每个玩家选一个代表你的模型，拿模型对应的人物卡。 两面属性不一样，选择其中一面，用别针夹在人物卡上，代表数值，初始对准绿色原始数值 人物除了初始能力值不同外没有其他区别。 地图 取出入口大厅，上台阶，下台阶放在桌面上（不要距离太近） 人物模型放到房间入口 其他物品 洗匀房间牌，放在桌子上 洗匀物品牌，预兆牌，事件牌，分开放好 拿好骰塔 进行游戏 年龄最小的玩家首先进行回合，然后以逆时针次序继续游戏。 每回合玩家以任意顺序，执行下列行动任意次：移动，探索，使用物品，战斗。下面分别说明 移动 通常先移动 Speed值决定了你移动的最大距离。可以从任何门出发去探索房间，新房间上若有标记，移动终止，处理卡片。 移动不会造成speed扣减。 事件卡处理后即弃掉，其他卡片需保留，今后可使用。 物品 每回合，每一件物品可以被使用，丢弃，或与同一房间内的其他玩家进行交换／赠予 对同一个物品以上选项只能选一，但每个物品都可以被“操作”一次，可以捡起地上别人丢弃的物品，但不能立刻使用 某些情形下，作祟过程可能会在房间中引入一些物品标记。它们可以如其他物品一般被交易，丢弃或偷窃。 如果物品牌上的描述和本文有冲突，以牌上的为准。 战斗 Haunt之后方可战斗 双方按Mighty数值掷骰，进攻方先掷，数值小的需承受物理伤害，伤害程度等于双方掷骰结果之差，武器只能用于进攻，不能用于防御，若伤害2点或更多，可拿一件物品代替（偷窃） 若战斗之前没有移动过，战斗之后仍可移动 名词解释 人物能力 能力考验每人每回合只能进行一次主动的能力考验。 作祟阶段与作祟判定 每次翻开预兆牌，进行作祟判定。 作祟判定时，当前回合玩家掷6个骰子，若结果大于当前桌面上的预兆牌数目，则立即开始作祟，否则游戏继续。 依作祟判定表，决定进入的场景和谁是奸徒。 作祟阶段会有额外的规则： 任何时候，密谋手册和求生指南中的规则至上，任何规则冲突出现时以之为准。 进入作祟阶段后，双方会知道胜负规则，但并不知道对方的胜负规则！所以猜测对方要干什么是非常重要的。 进入作祟阶段后，双方会获得特殊能力，只需遵守规则执行能力，但不必告诉对方理由和细节，同理对方也对你保密。 进入作祟阶段后，作祟者左方的英雄先行动，即奸徒最后行动。 奸徒行动后控制怪物行动（如果有怪物）。 房间说明中不利的文字对奸徒和怪物无效。使用神秘电梯Mystic Elevator时能到达任何地 方，但奸徒和怪物每回合只能使用电梯一次。 任何人想要离开对手所在的房间时，每一个敌人会让移动方多费1点速度。不过每人每回合至少可以移动1步 怪物的特殊规则 怪物按照速度值掷骰并决定移动距离，最少亦可移动1步。若你有多个同种怪物，每个种类只掷一次。 每只怪物每回合可攻击一次。默认的攻击方式是双方均用Mighty值。若怪物胜出，英雄受到点数之差的物理伤害。若英雄胜出，怪物被眩晕。 怪物在战斗中失败，不会受伤，但会被眩晕，将标志翻面。怪物依然可以移动，但下一个回合无法攻击。下回合结束时将怪物翻面并恢复攻击能力。 怪物不能探索新房间也不能从房间得到能力提升。怪物不能携带物品。 可以从下台阶爬到煤导槽，可以从崩塌的房间之下的房间爬上去，也可以从舞厅爬到画廊。只需使用1点行动力，无须掷骰。 特殊的房间说明升降梯煤导槽保险柜崩塌的房间裂缝／陵墓／保险库／塔楼 FAQ 摇骰子后在移动力足够的情况下，能否在A房先翻开C房，然后人物移动至B房后将C房连接此房边缘 移动步数是根据速度属性决定的，直到进入新房间停下。也就意味着必须停留在翻开新的房间那里了，而不是说你先在A房间翻开个新的再决定摆在哪里。角色的移动不需要通过掷骰子决定的。 移动至已经翻开的房间内是否再次抽取物品牌、事件牌及预兆牌（包括作祟阶段前后期的情况） 只有翻开新房间的玩家可以触发那个房间的物品、事件、预兆等，后再进入的角色不会触发 印有强迫的能力测试的房间是否每次进入都需要测试，多次不通过而造成能力下降是否累加，路过而不停留这些房间是否需要测试 “当通过XXX房间”的鉴定即指路过不停留时需要能力测试，如果停留在这里，次回合再走就不需要测试了 “离开XXX房间”的鉴定则只要是离开这个房间就需要测试。所有能力测试都是需要单独进行的，每次触发都要进行。 “下台阶”是不是只算是地下层的基本版块，不能从此上楼，但是新发现的房间都是连着它的？从地下层上来的方式除了“与门厅相连的地下楼梯”和“电梯”没有了吧？（要不然规则上为什么说作祟准备阶段要看看有没有地下层上地面的途径，没有的话奸徒安装“与门厅相连的地下楼梯”） 问的都是正确的. 崩溃房间之下翻开的房间与“下台阶”相连？（要不然地下层不就连不起来了么） 必须靠着已知房间,靠着哪个自选 袭击只能用力量么？还是随便一个属性都能发起袭击？ 只能用力量，有左轮手枪的话可以用速度袭击，有指环的话可以用神智袭击，然后再看剧本有时可以用别的袭击 如果剧本任务是在一个房间里进行能力测试 ，通过就可以得到胜利必备的条件，那我能不能一回合进两次一个房间？或者就一直在这个房间周围晃悠每回合都进来一次？ 可以一回合进两次一个房间,但是不能在一回合内进行两次检定.在这个房间周围晃悠每回合都进来一次也是可以的 肉体受到损伤时，是扣减哪一个值？力量吗？ 肉体损伤指玩家自己决定减力量还是速度 某些物品牌和预兆牌有提升力量的武器，袭击是能否同时用一张武器物品牌和武器预兆牌，另外被袭击是能否使用此类牌 你不是狂战士，你不能双持武器去战斗，战斗时只能选择一把武器使用，被袭击时不能用武器 因房间或卡片效果移动到其他楼层（如：崩塌的房间），新翻开的房间是直接连其他已知房间还是只需翻开一个房间放置任意位置，而该房间四面都是未知区域。若是后者，怎样计算该房间与已知房间之间的距离。 探索出的新房间必须和已有的房间是相连的，就比如说崩塌的房间，你掉下去之后翻一个地下的房间然后需要和已有的地下房间相连，连哪个你自己定 必翻的话，那暖炉房这类“行动结束还在房间就受到伤害”，不是等于说第一个进来翻了预兆的人，就一定会受到伤害了吗？因为翻了卡就不能再行动了啊 是的，但后面进入的就可以不在这房间停留，离开呀，为后面考虑的 保险库是不是每人只有一次开启的机会？失败了就不能再开了？ 不是，可以继续 未完待续]]></content>
      <categories>
        <category>娱乐</category>
        <category>桌游</category>
      </categories>
      <tags>
        <tag>山屋惊魂</tag>
        <tag>小黑屋</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Github Pages 博客搭建]]></title>
    <url>%2Fposts%2Ff491b9ba%2F</url>
    <content type="text"><![CDATA[把自己折腾博客的过程贴上来吧。 搭建github 博客的步骤：在本地：安装nodejs和git -&gt; 安装hexo -&gt; hexo init -&gt; 配置configuration 在github上：创建账户 -&gt; 本机添加ssh -&gt; 创建“账户名.github.io”的仓库 -&gt; 填入hexo的配置文件 每次hexo deploy 都会把渲染好的文件上传到github仓库。 如果想在多台电脑上编辑，可以把hexo的源代码也上传到github，方便管理。只要将hexo源码和渲染后的网页放在不同的branch即可。 配置方法：在repo中新建一个名为hexo的branch（可以先提交过去一个空文件，再删掉）。 进入配置页面把hexo分支设为主分支。 得到的的github repo 结构： branch hexo 存放hexo的source code branch master 存放hexo的渲染之后的文件。 每次都把编辑好的源代码push到hexo分支下，同时让hexo把generate之后的网页放在master分支。 添加文章的流程：在repo的文件夹下进入终端（windows可以进入git bash） 12# 添加新文章hexo new "name" 编辑“name.md”文件1234567# 部署文章git add .git commit -m "add file"git push origin hexohexo clean # 在多次尝试中发现，加上clean，上传的才会比较好hexo generatehexo generate -d 在新电脑上配置的流程：在任意文件夹执行：123git clone * # 替换为项目repo的链接npm install# 不需要再hexo init，直接编辑文件，然后]]></content>
      <categories>
        <category>技术</category>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
